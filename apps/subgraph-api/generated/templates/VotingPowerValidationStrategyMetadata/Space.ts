// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AuthenticatorsAdded extends ethereum.Event {
  get params(): AuthenticatorsAdded__Params {
    return new AuthenticatorsAdded__Params(this);
  }
}

export class AuthenticatorsAdded__Params {
  _event: AuthenticatorsAdded;

  constructor(event: AuthenticatorsAdded) {
    this._event = event;
  }

  get newAuthenticators(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }
}

export class AuthenticatorsRemoved extends ethereum.Event {
  get params(): AuthenticatorsRemoved__Params {
    return new AuthenticatorsRemoved__Params(this);
  }
}

export class AuthenticatorsRemoved__Params {
  _event: AuthenticatorsRemoved;

  constructor(event: AuthenticatorsRemoved) {
    this._event = event;
  }

  get authenticators(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DaoURIUpdated extends ethereum.Event {
  get params(): DaoURIUpdated__Params {
    return new DaoURIUpdated__Params(this);
  }
}

export class DaoURIUpdated__Params {
  _event: DaoURIUpdated;

  constructor(event: DaoURIUpdated) {
    this._event = event;
  }

  get newDaoURI(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MaxVotingDurationUpdated extends ethereum.Event {
  get params(): MaxVotingDurationUpdated__Params {
    return new MaxVotingDurationUpdated__Params(this);
  }
}

export class MaxVotingDurationUpdated__Params {
  _event: MaxVotingDurationUpdated;

  constructor(event: MaxVotingDurationUpdated) {
    this._event = event;
  }

  get newMaxVotingDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MetadataURIUpdated extends ethereum.Event {
  get params(): MetadataURIUpdated__Params {
    return new MetadataURIUpdated__Params(this);
  }
}

export class MetadataURIUpdated__Params {
  _event: MetadataURIUpdated;

  constructor(event: MetadataURIUpdated) {
    this._event = event;
  }

  get newMetadataURI(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class MinVotingDurationUpdated extends ethereum.Event {
  get params(): MinVotingDurationUpdated__Params {
    return new MinVotingDurationUpdated__Params(this);
  }
}

export class MinVotingDurationUpdated__Params {
  _event: MinVotingDurationUpdated;

  constructor(event: MinVotingDurationUpdated) {
    this._event = event;
  }

  get newMinVotingDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalCancelled extends ethereum.Event {
  get params(): ProposalCancelled__Params {
    return new ProposalCancelled__Params(this);
  }
}

export class ProposalCancelled__Params {
  _event: ProposalCancelled;

  constructor(event: ProposalCancelled) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalCreated extends ethereum.Event {
  get params(): ProposalCreated__Params {
    return new ProposalCreated__Params(this);
  }
}

export class ProposalCreated__Params {
  _event: ProposalCreated;

  constructor(event: ProposalCreated) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get author(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get proposal(): ProposalCreatedProposalStruct {
    return changetype<ProposalCreatedProposalStruct>(
      this._event.parameters[2].value.toTuple(),
    );
  }

  get metadataUri(): string {
    return this._event.parameters[3].value.toString();
  }

  get payload(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class ProposalCreatedProposalStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get startBlockNumber(): BigInt {
    return this[1].toBigInt();
  }

  get executionStrategy(): Address {
    return this[2].toAddress();
  }

  get minEndBlockNumber(): BigInt {
    return this[3].toBigInt();
  }

  get maxEndBlockNumber(): BigInt {
    return this[4].toBigInt();
  }

  get finalizationStatus(): i32 {
    return this[5].toI32();
  }

  get executionPayloadHash(): Bytes {
    return this[6].toBytes();
  }

  get activeVotingStrategies(): BigInt {
    return this[7].toBigInt();
  }
}

export class ProposalExecuted extends ethereum.Event {
  get params(): ProposalExecuted__Params {
    return new ProposalExecuted__Params(this);
  }
}

export class ProposalExecuted__Params {
  _event: ProposalExecuted;

  constructor(event: ProposalExecuted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalUpdated extends ethereum.Event {
  get params(): ProposalUpdated__Params {
    return new ProposalUpdated__Params(this);
  }
}

export class ProposalUpdated__Params {
  _event: ProposalUpdated;

  constructor(event: ProposalUpdated) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newExecutionStrategy(): ProposalUpdatedNewExecutionStrategyStruct {
    return changetype<ProposalUpdatedNewExecutionStrategyStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }

  get newMetadataURI(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class ProposalUpdatedNewExecutionStrategyStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class ProposalValidationStrategyUpdated extends ethereum.Event {
  get params(): ProposalValidationStrategyUpdated__Params {
    return new ProposalValidationStrategyUpdated__Params(this);
  }
}

export class ProposalValidationStrategyUpdated__Params {
  _event: ProposalValidationStrategyUpdated;

  constructor(event: ProposalValidationStrategyUpdated) {
    this._event = event;
  }

  get newProposalValidationStrategy(): ProposalValidationStrategyUpdatedNewProposalValidationStrategyStruct {
    return changetype<ProposalValidationStrategyUpdatedNewProposalValidationStrategyStruct>(
      this._event.parameters[0].value.toTuple(),
    );
  }

  get newProposalValidationStrategyMetadataURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class ProposalValidationStrategyUpdatedNewProposalValidationStrategyStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class SpaceCreated extends ethereum.Event {
  get params(): SpaceCreated__Params {
    return new SpaceCreated__Params(this);
  }
}

export class SpaceCreated__Params {
  _event: SpaceCreated;

  constructor(event: SpaceCreated) {
    this._event = event;
  }

  get space(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get input(): SpaceCreatedInputStruct {
    return changetype<SpaceCreatedInputStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }
}

export class SpaceCreatedInputStruct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get votingDelay(): BigInt {
    return this[1].toBigInt();
  }

  get minVotingDuration(): BigInt {
    return this[2].toBigInt();
  }

  get maxVotingDuration(): BigInt {
    return this[3].toBigInt();
  }

  get proposalValidationStrategy(): SpaceCreatedInputProposalValidationStrategyStruct {
    return changetype<SpaceCreatedInputProposalValidationStrategyStruct>(
      this[4].toTuple(),
    );
  }

  get proposalValidationStrategyMetadataURI(): string {
    return this[5].toString();
  }

  get daoURI(): string {
    return this[6].toString();
  }

  get metadataURI(): string {
    return this[7].toString();
  }

  get votingStrategies(): Array<SpaceCreatedInputVotingStrategiesStruct> {
    return this[8].toTupleArray<SpaceCreatedInputVotingStrategiesStruct>();
  }

  get votingStrategyMetadataURIs(): Array<string> {
    return this[9].toStringArray();
  }

  get authenticators(): Array<Address> {
    return this[10].toAddressArray();
  }
}

export class SpaceCreatedInputProposalValidationStrategyStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class SpaceCreatedInputVotingStrategiesStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VoteCast extends ethereum.Event {
  get params(): VoteCast__Params {
    return new VoteCast__Params(this);
  }
}

export class VoteCast__Params {
  _event: VoteCast;

  constructor(event: VoteCast) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get choice(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get votingPower(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VoteCastWithMetadata extends ethereum.Event {
  get params(): VoteCastWithMetadata__Params {
    return new VoteCastWithMetadata__Params(this);
  }
}

export class VoteCastWithMetadata__Params {
  _event: VoteCastWithMetadata;

  constructor(event: VoteCastWithMetadata) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get choice(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get votingPower(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get metadataUri(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class VotingDelayUpdated extends ethereum.Event {
  get params(): VotingDelayUpdated__Params {
    return new VotingDelayUpdated__Params(this);
  }
}

export class VotingDelayUpdated__Params {
  _event: VotingDelayUpdated;

  constructor(event: VotingDelayUpdated) {
    this._event = event;
  }

  get newVotingDelay(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class VotingStrategiesAdded extends ethereum.Event {
  get params(): VotingStrategiesAdded__Params {
    return new VotingStrategiesAdded__Params(this);
  }
}

export class VotingStrategiesAdded__Params {
  _event: VotingStrategiesAdded;

  constructor(event: VotingStrategiesAdded) {
    this._event = event;
  }

  get newVotingStrategies(): Array<VotingStrategiesAddedNewVotingStrategiesStruct> {
    return this._event.parameters[0].value.toTupleArray<VotingStrategiesAddedNewVotingStrategiesStruct>();
  }

  get newVotingStrategyMetadataURIs(): Array<string> {
    return this._event.parameters[1].value.toStringArray();
  }
}

export class VotingStrategiesAddedNewVotingStrategiesStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class VotingStrategiesRemoved extends ethereum.Event {
  get params(): VotingStrategiesRemoved__Params {
    return new VotingStrategiesRemoved__Params(this);
  }
}

export class VotingStrategiesRemoved__Params {
  _event: VotingStrategiesRemoved;

  constructor(event: VotingStrategiesRemoved) {
    this._event = event;
  }

  get votingStrategyIndices(): Array<i32> {
    return this._event.parameters[0].value.toI32Array();
  }
}

export class Space__proposalValidationStrategyResult {
  value0: Address;
  value1: Bytes;

  constructor(value0: Address, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getAddr(): Address {
    return this.value0;
  }

  getParams(): Bytes {
    return this.value1;
  }
}

export class Space__proposalsResult {
  value0: Address;
  value1: BigInt;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: i32;
  value6: Bytes;
  value7: BigInt;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: i32,
    value6: Bytes,
    value7: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5)),
    );
    map.set("value6", ethereum.Value.fromFixedBytes(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    return map;
  }

  getAuthor(): Address {
    return this.value0;
  }

  getStartBlockNumber(): BigInt {
    return this.value1;
  }

  getExecutionStrategy(): Address {
    return this.value2;
  }

  getMinEndBlockNumber(): BigInt {
    return this.value3;
  }

  getMaxEndBlockNumber(): BigInt {
    return this.value4;
  }

  getFinalizationStatus(): i32 {
    return this.value5;
  }

  getExecutionPayloadHash(): Bytes {
    return this.value6;
  }

  getActiveVotingStrategies(): BigInt {
    return this.value7;
  }
}

export class Space__votingStrategiesResult {
  value0: Address;
  value1: Bytes;

  constructor(value0: Address, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getAddr(): Address {
    return this.value0;
  }

  getParams(): Bytes {
    return this.value1;
  }
}

export class Space extends ethereum.SmartContract {
  static bind(address: Address): Space {
    return new Space("Space", address);
  }

  activeVotingStrategies(): BigInt {
    let result = super.call(
      "activeVotingStrategies",
      "activeVotingStrategies():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_activeVotingStrategies(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "activeVotingStrategies",
      "activeVotingStrategies():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  authenticators(auth: Address): BigInt {
    let result = super.call(
      "authenticators",
      "authenticators(address):(uint256)",
      [ethereum.Value.fromAddress(auth)],
    );

    return result[0].toBigInt();
  }

  try_authenticators(auth: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "authenticators",
      "authenticators(address):(uint256)",
      [ethereum.Value.fromAddress(auth)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  daoURI(): string {
    let result = super.call("daoURI", "daoURI():(string)", []);

    return result[0].toString();
  }

  try_daoURI(): ethereum.CallResult<string> {
    let result = super.tryCall("daoURI", "daoURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getProposalStatus(proposalId: BigInt): i32 {
    let result = super.call(
      "getProposalStatus",
      "getProposalStatus(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );

    return result[0].toI32();
  }

  try_getProposalStatus(proposalId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getProposalStatus",
      "getProposalStatus(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  maxVotingDuration(): BigInt {
    let result = super.call(
      "maxVotingDuration",
      "maxVotingDuration():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_maxVotingDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxVotingDuration",
      "maxVotingDuration():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minVotingDuration(): BigInt {
    let result = super.call(
      "minVotingDuration",
      "minVotingDuration():(uint32)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minVotingDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minVotingDuration",
      "minVotingDuration():(uint32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nextProposalId(): BigInt {
    let result = super.call("nextProposalId", "nextProposalId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextProposalId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextProposalId",
      "nextProposalId():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nextVotingStrategyIndex(): i32 {
    let result = super.call(
      "nextVotingStrategyIndex",
      "nextVotingStrategyIndex():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_nextVotingStrategyIndex(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "nextVotingStrategyIndex",
      "nextVotingStrategyIndex():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposalValidationStrategy(): Space__proposalValidationStrategyResult {
    let result = super.call(
      "proposalValidationStrategy",
      "proposalValidationStrategy():(address,bytes)",
      [],
    );

    return new Space__proposalValidationStrategyResult(
      result[0].toAddress(),
      result[1].toBytes(),
    );
  }

  try_proposalValidationStrategy(): ethereum.CallResult<Space__proposalValidationStrategyResult> {
    let result = super.tryCall(
      "proposalValidationStrategy",
      "proposalValidationStrategy():(address,bytes)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Space__proposalValidationStrategyResult(
        value[0].toAddress(),
        value[1].toBytes(),
      ),
    );
  }

  proposals(proposalId: BigInt): Space__proposalsResult {
    let result = super.call(
      "proposals",
      "proposals(uint256):(address,uint32,address,uint32,uint32,uint8,bytes32,uint256)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );

    return new Space__proposalsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toI32(),
      result[6].toBytes(),
      result[7].toBigInt(),
    );
  }

  try_proposals(
    proposalId: BigInt,
  ): ethereum.CallResult<Space__proposalsResult> {
    let result = super.tryCall(
      "proposals",
      "proposals(uint256):(address,uint32,address,uint32,uint32,uint8,bytes32,uint256)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Space__proposalsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toI32(),
        value[6].toBytes(),
        value[7].toBigInt(),
      ),
    );
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  votePower(proposalId: BigInt, choice: i32): BigInt {
    let result = super.call("votePower", "votePower(uint256,uint8):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(proposalId),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(choice)),
    ]);

    return result[0].toBigInt();
  }

  try_votePower(proposalId: BigInt, choice: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "votePower",
      "votePower(uint256,uint8):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(choice)),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  voteRegistry(proposalId: BigInt, voter: Address): BigInt {
    let result = super.call(
      "voteRegistry",
      "voteRegistry(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter),
      ],
    );

    return result[0].toBigInt();
  }

  try_voteRegistry(
    proposalId: BigInt,
    voter: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "voteRegistry",
      "voteRegistry(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votingDelay(): BigInt {
    let result = super.call("votingDelay", "votingDelay():(uint32)", []);

    return result[0].toBigInt();
  }

  try_votingDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votingDelay", "votingDelay():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votingStrategies(strategyIndex: i32): Space__votingStrategiesResult {
    let result = super.call(
      "votingStrategies",
      "votingStrategies(uint8):(address,bytes)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(strategyIndex))],
    );

    return new Space__votingStrategiesResult(
      result[0].toAddress(),
      result[1].toBytes(),
    );
  }

  try_votingStrategies(
    strategyIndex: i32,
  ): ethereum.CallResult<Space__votingStrategiesResult> {
    let result = super.tryCall(
      "votingStrategies",
      "votingStrategies(uint8):(address,bytes)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(strategyIndex))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Space__votingStrategiesResult(
        value[0].toAddress(),
        value[1].toBytes(),
      ),
    );
  }
}

export class CancelCall extends ethereum.Call {
  get inputs(): CancelCall__Inputs {
    return new CancelCall__Inputs(this);
  }

  get outputs(): CancelCall__Outputs {
    return new CancelCall__Outputs(this);
  }
}

export class CancelCall__Inputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelCall__Outputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get executionPayload(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get input(): InitializeCallInputStruct {
    return changetype<InitializeCallInputStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCallInputStruct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get votingDelay(): BigInt {
    return this[1].toBigInt();
  }

  get minVotingDuration(): BigInt {
    return this[2].toBigInt();
  }

  get maxVotingDuration(): BigInt {
    return this[3].toBigInt();
  }

  get proposalValidationStrategy(): InitializeCallInputProposalValidationStrategyStruct {
    return changetype<InitializeCallInputProposalValidationStrategyStruct>(
      this[4].toTuple(),
    );
  }

  get proposalValidationStrategyMetadataURI(): string {
    return this[5].toString();
  }

  get daoURI(): string {
    return this[6].toString();
  }

  get metadataURI(): string {
    return this[7].toString();
  }

  get votingStrategies(): Array<InitializeCallInputVotingStrategiesStruct> {
    return this[8].toTupleArray<InitializeCallInputVotingStrategiesStruct>();
  }

  get votingStrategyMetadataURIs(): Array<string> {
    return this[9].toStringArray();
  }

  get authenticators(): Array<Address> {
    return this[10].toAddressArray();
  }
}

export class InitializeCallInputProposalValidationStrategyStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class InitializeCallInputVotingStrategiesStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class ProposeCall extends ethereum.Call {
  get inputs(): ProposeCall__Inputs {
    return new ProposeCall__Inputs(this);
  }

  get outputs(): ProposeCall__Outputs {
    return new ProposeCall__Outputs(this);
  }
}

export class ProposeCall__Inputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get author(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get metadataURI(): string {
    return this._call.inputValues[1].value.toString();
  }

  get executionStrategy(): ProposeCallExecutionStrategyStruct {
    return changetype<ProposeCallExecutionStrategyStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get userProposalValidationParams(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class ProposeCall__Outputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }
}

export class ProposeCallExecutionStrategyStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateProposalCall extends ethereum.Call {
  get inputs(): UpdateProposalCall__Inputs {
    return new UpdateProposalCall__Inputs(this);
  }

  get outputs(): UpdateProposalCall__Outputs {
    return new UpdateProposalCall__Outputs(this);
  }
}

export class UpdateProposalCall__Inputs {
  _call: UpdateProposalCall;

  constructor(call: UpdateProposalCall) {
    this._call = call;
  }

  get author(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get executionStrategy(): UpdateProposalCallExecutionStrategyStruct {
    return changetype<UpdateProposalCallExecutionStrategyStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get metadataURI(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class UpdateProposalCall__Outputs {
  _call: UpdateProposalCall;

  constructor(call: UpdateProposalCall) {
    this._call = call;
  }
}

export class UpdateProposalCallExecutionStrategyStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class UpdateSettingsCall extends ethereum.Call {
  get inputs(): UpdateSettingsCall__Inputs {
    return new UpdateSettingsCall__Inputs(this);
  }

  get outputs(): UpdateSettingsCall__Outputs {
    return new UpdateSettingsCall__Outputs(this);
  }
}

export class UpdateSettingsCall__Inputs {
  _call: UpdateSettingsCall;

  constructor(call: UpdateSettingsCall) {
    this._call = call;
  }

  get input(): UpdateSettingsCallInputStruct {
    return changetype<UpdateSettingsCallInputStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class UpdateSettingsCall__Outputs {
  _call: UpdateSettingsCall;

  constructor(call: UpdateSettingsCall) {
    this._call = call;
  }
}

export class UpdateSettingsCallInputStruct extends ethereum.Tuple {
  get minVotingDuration(): BigInt {
    return this[0].toBigInt();
  }

  get maxVotingDuration(): BigInt {
    return this[1].toBigInt();
  }

  get votingDelay(): BigInt {
    return this[2].toBigInt();
  }

  get metadataURI(): string {
    return this[3].toString();
  }

  get daoURI(): string {
    return this[4].toString();
  }

  get proposalValidationStrategy(): UpdateSettingsCallInputProposalValidationStrategyStruct {
    return changetype<UpdateSettingsCallInputProposalValidationStrategyStruct>(
      this[5].toTuple(),
    );
  }

  get proposalValidationStrategyMetadataURI(): string {
    return this[6].toString();
  }

  get authenticatorsToAdd(): Array<Address> {
    return this[7].toAddressArray();
  }

  get authenticatorsToRemove(): Array<Address> {
    return this[8].toAddressArray();
  }

  get votingStrategiesToAdd(): Array<UpdateSettingsCallInputVotingStrategiesToAddStruct> {
    return this[9].toTupleArray<UpdateSettingsCallInputVotingStrategiesToAddStruct>();
  }

  get votingStrategyMetadataURIsToAdd(): Array<string> {
    return this[10].toStringArray();
  }

  get votingStrategiesToRemove(): Array<i32> {
    return this[11].toI32Array();
  }
}

export class UpdateSettingsCallInputProposalValidationStrategyStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class UpdateSettingsCallInputVotingStrategiesToAddStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class VoteCall extends ethereum.Call {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get voter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get choice(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get userVotingStrategies(): Array<VoteCallUserVotingStrategiesStruct> {
    return this._call.inputValues[3].value.toTupleArray<VoteCallUserVotingStrategiesStruct>();
  }

  get metadataURI(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}

export class VoteCallUserVotingStrategiesStruct extends ethereum.Tuple {
  get index(): i32 {
    return this[0].toI32();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }
}
