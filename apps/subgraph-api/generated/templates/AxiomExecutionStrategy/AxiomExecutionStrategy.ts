// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AxiomExecutionStrategySetUp extends ethereum.Event {
  get params(): AxiomExecutionStrategySetUp__Params {
    return new AxiomExecutionStrategySetUp__Params(this);
  }
}

export class AxiomExecutionStrategySetUp__Params {
  _event: AxiomExecutionStrategySetUp;

  constructor(event: AxiomExecutionStrategySetUp) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get quorum(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get snapshotAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get snapshotSlot(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get spaceAddress(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get querySchema(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class AxiomV2Call extends ethereum.Event {
  get params(): AxiomV2Call__Params {
    return new AxiomV2Call__Params(this);
  }
}

export class AxiomV2Call__Params {
  _event: AxiomV2Call;

  constructor(event: AxiomV2Call) {
    this._event = event;
  }

  get sourceChainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get querySchema(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get queryId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class AxiomV2OffchainCall extends ethereum.Event {
  get params(): AxiomV2OffchainCall__Params {
    return new AxiomV2OffchainCall__Params(this);
  }
}

export class AxiomV2OffchainCall__Params {
  _event: AxiomV2OffchainCall;

  constructor(event: AxiomV2OffchainCall) {
    this._event = event;
  }

  get sourceChainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get querySchema(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get queryId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class QuerySchemaUpdated extends ethereum.Event {
  get params(): QuerySchemaUpdated__Params {
    return new QuerySchemaUpdated__Params(this);
  }
}

export class QuerySchemaUpdated__Params {
  _event: QuerySchemaUpdated;

  constructor(event: QuerySchemaUpdated) {
    this._event = event;
  }

  get newQuerySchema(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class QuorumUpdated extends ethereum.Event {
  get params(): QuorumUpdated__Params {
    return new QuorumUpdated__Params(this);
  }
}

export class QuorumUpdated__Params {
  _event: QuorumUpdated;

  constructor(event: QuorumUpdated) {
    this._event = event;
  }

  get newQuorum(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SpaceDisabled extends ethereum.Event {
  get params(): SpaceDisabled__Params {
    return new SpaceDisabled__Params(this);
  }
}

export class SpaceDisabled__Params {
  _event: SpaceDisabled;

  constructor(event: SpaceDisabled) {
    this._event = event;
  }

  get space(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SpaceEnabled extends ethereum.Event {
  get params(): SpaceEnabled__Params {
    return new SpaceEnabled__Params(this);
  }
}

export class SpaceEnabled__Params {
  _event: SpaceEnabled;

  constructor(event: SpaceEnabled) {
    this._event = event;
  }

  get space(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TransactionExecuted extends ethereum.Event {
  get params(): TransactionExecuted__Params {
    return new TransactionExecuted__Params(this);
  }
}

export class TransactionExecuted__Params {
  _event: TransactionExecuted;

  constructor(event: TransactionExecuted) {
    this._event = event;
  }

  get transaction(): TransactionExecutedTransactionStruct {
    return changetype<TransactionExecutedTransactionStruct>(
      this._event.parameters[0].value.toTuple(),
    );
  }
}

export class TransactionExecutedTransactionStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get data(): Bytes {
    return this[2].toBytes();
  }

  get operation(): i32 {
    return this[3].toI32();
  }

  get salt(): BigInt {
    return this[4].toBigInt();
  }
}

export class WriteOffchainVotes extends ethereum.Event {
  get params(): WriteOffchainVotes__Params {
    return new WriteOffchainVotes__Params(this);
  }
}

export class WriteOffchainVotes__Params {
  _event: WriteOffchainVotes;

  constructor(event: WriteOffchainVotes) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get queryId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get offchainForVotes(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get offchainAgainstVotes(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get offchainAbstainVotes(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AxiomExecutionStrategy__getProposalStatusInputProposalStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get startBlockNumber(): BigInt {
    return this[1].toBigInt();
  }

  get executionStrategy(): Address {
    return this[2].toAddress();
  }

  get minEndBlockNumber(): BigInt {
    return this[3].toBigInt();
  }

  get maxEndBlockNumber(): BigInt {
    return this[4].toBigInt();
  }

  get finalizationStatus(): i32 {
    return this[5].toI32();
  }

  get executionPayloadHash(): Bytes {
    return this[6].toBytes();
  }

  get activeVotingStrategies(): BigInt {
    return this[7].toBigInt();
  }
}

export class AxiomExecutionStrategy__offchainVoteResultsResult {
  value0: boolean;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: boolean, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getAreOffchainVotesProven(): boolean {
    return this.value0;
  }

  getOffchainVotesFor(): BigInt {
    return this.value1;
  }

  getOffchainVotesAgainst(): BigInt {
    return this.value2;
  }

  getOffchainVotesAbstain(): BigInt {
    return this.value3;
  }
}

export class AxiomExecutionStrategy extends ethereum.SmartContract {
  static bind(address: Address): AxiomExecutionStrategy {
    return new AxiomExecutionStrategy("AxiomExecutionStrategy", address);
  }

  axiomV2QueryAddress(): Address {
    let result = super.call(
      "axiomV2QueryAddress",
      "axiomV2QueryAddress():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_axiomV2QueryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "axiomV2QueryAddress",
      "axiomV2QueryAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getProposalStatus(
    proposal: AxiomExecutionStrategy__getProposalStatusInputProposalStruct,
    votesFor: BigInt,
    votesAgainst: BigInt,
    votesAbstain: BigInt,
  ): i32 {
    let result = super.call(
      "getProposalStatus",
      "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256):(uint8)",
      [
        ethereum.Value.fromTuple(proposal),
        ethereum.Value.fromUnsignedBigInt(votesFor),
        ethereum.Value.fromUnsignedBigInt(votesAgainst),
        ethereum.Value.fromUnsignedBigInt(votesAbstain),
      ],
    );

    return result[0].toI32();
  }

  try_getProposalStatus(
    proposal: AxiomExecutionStrategy__getProposalStatusInputProposalStruct,
    votesFor: BigInt,
    votesAgainst: BigInt,
    votesAbstain: BigInt,
  ): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getProposalStatus",
      "getProposalStatus((address,uint32,address,uint32,uint32,uint8,bytes32,uint256),uint256,uint256,uint256):(uint8)",
      [
        ethereum.Value.fromTuple(proposal),
        ethereum.Value.fromUnsignedBigInt(votesFor),
        ethereum.Value.fromUnsignedBigInt(votesAgainst),
        ethereum.Value.fromUnsignedBigInt(votesAbstain),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getStrategyType(): string {
    let result = super.call(
      "getStrategyType",
      "getStrategyType():(string)",
      [],
    );

    return result[0].toString();
  }

  try_getStrategyType(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getStrategyType",
      "getStrategyType():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  isSpaceEnabled(space: Address): BigInt {
    let result = super.call(
      "isSpaceEnabled",
      "isSpaceEnabled(address):(uint256)",
      [ethereum.Value.fromAddress(space)],
    );

    return result[0].toBigInt();
  }

  try_isSpaceEnabled(space: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "isSpaceEnabled",
      "isSpaceEnabled(address):(uint256)",
      [ethereum.Value.fromAddress(space)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  offchainVoteResults(
    proposalId: BigInt,
  ): AxiomExecutionStrategy__offchainVoteResultsResult {
    let result = super.call(
      "offchainVoteResults",
      "offchainVoteResults(uint256):(bool,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );

    return new AxiomExecutionStrategy__offchainVoteResultsResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_offchainVoteResults(
    proposalId: BigInt,
  ): ethereum.CallResult<AxiomExecutionStrategy__offchainVoteResultsResult> {
    let result = super.tryCall(
      "offchainVoteResults",
      "offchainVoteResults(uint256):(bool,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AxiomExecutionStrategy__offchainVoteResultsResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  querySchema(): Bytes {
    let result = super.call("querySchema", "querySchema():(bytes32)", []);

    return result[0].toBytes();
  }

  try_querySchema(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("querySchema", "querySchema():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  quorum(): BigInt {
    let result = super.call("quorum", "quorum():(uint256)", []);

    return result[0].toBigInt();
  }

  try_quorum(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("quorum", "quorum():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  snapshotAddress(): Address {
    let result = super.call(
      "snapshotAddress",
      "snapshotAddress():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_snapshotAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "snapshotAddress",
      "snapshotAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  snapshotSlot(): BigInt {
    let result = super.call("snapshotSlot", "snapshotSlot():(uint256)", []);

    return result[0].toBigInt();
  }

  try_snapshotSlot(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("snapshotSlot", "snapshotSlot():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  space(): Address {
    let result = super.call("space", "space():(address)", []);

    return result[0].toAddress();
  }

  try_space(): ethereum.CallResult<Address> {
    let result = super.tryCall("space", "space():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _quorum(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _axiomV2QueryAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _snapshotAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _snapshotSlot(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _spaceAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _querySchema(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AxiomV2CallbackCall extends ethereum.Call {
  get inputs(): AxiomV2CallbackCall__Inputs {
    return new AxiomV2CallbackCall__Inputs(this);
  }

  get outputs(): AxiomV2CallbackCall__Outputs {
    return new AxiomV2CallbackCall__Outputs(this);
  }
}

export class AxiomV2CallbackCall__Inputs {
  _call: AxiomV2CallbackCall;

  constructor(call: AxiomV2CallbackCall) {
    this._call = call;
  }

  get sourceChainId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get caller(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get querySchema(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get queryId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get axiomResults(): Array<Bytes> {
    return this._call.inputValues[4].value.toBytesArray();
  }

  get extraData(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class AxiomV2CallbackCall__Outputs {
  _call: AxiomV2CallbackCall;

  constructor(call: AxiomV2CallbackCall) {
    this._call = call;
  }
}

export class AxiomV2OffchainCallbackCall extends ethereum.Call {
  get inputs(): AxiomV2OffchainCallbackCall__Inputs {
    return new AxiomV2OffchainCallbackCall__Inputs(this);
  }

  get outputs(): AxiomV2OffchainCallbackCall__Outputs {
    return new AxiomV2OffchainCallbackCall__Outputs(this);
  }
}

export class AxiomV2OffchainCallbackCall__Inputs {
  _call: AxiomV2OffchainCallbackCall;

  constructor(call: AxiomV2OffchainCallbackCall) {
    this._call = call;
  }

  get sourceChainId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get caller(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get querySchema(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get queryId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get axiomResults(): Array<Bytes> {
    return this._call.inputValues[4].value.toBytesArray();
  }

  get extraData(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class AxiomV2OffchainCallbackCall__Outputs {
  _call: AxiomV2OffchainCallbackCall;

  constructor(call: AxiomV2OffchainCallbackCall) {
    this._call = call;
  }
}

export class DisableSpaceCall extends ethereum.Call {
  get inputs(): DisableSpaceCall__Inputs {
    return new DisableSpaceCall__Inputs(this);
  }

  get outputs(): DisableSpaceCall__Outputs {
    return new DisableSpaceCall__Outputs(this);
  }
}

export class DisableSpaceCall__Inputs {
  _call: DisableSpaceCall;

  constructor(call: DisableSpaceCall) {
    this._call = call;
  }

  get space(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DisableSpaceCall__Outputs {
  _call: DisableSpaceCall;

  constructor(call: DisableSpaceCall) {
    this._call = call;
  }
}

export class EnableSpaceCall extends ethereum.Call {
  get inputs(): EnableSpaceCall__Inputs {
    return new EnableSpaceCall__Inputs(this);
  }

  get outputs(): EnableSpaceCall__Outputs {
    return new EnableSpaceCall__Outputs(this);
  }
}

export class EnableSpaceCall__Inputs {
  _call: EnableSpaceCall;

  constructor(call: EnableSpaceCall) {
    this._call = call;
  }

  get space(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EnableSpaceCall__Outputs {
  _call: EnableSpaceCall;

  constructor(call: EnableSpaceCall) {
    this._call = call;
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proposal(): ExecuteCallProposalStruct {
    return changetype<ExecuteCallProposalStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get votesFor(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get votesAgainst(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get votesAbstain(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get payload(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class ExecuteCallProposalStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get startBlockNumber(): BigInt {
    return this[1].toBigInt();
  }

  get executionStrategy(): Address {
    return this[2].toAddress();
  }

  get minEndBlockNumber(): BigInt {
    return this[3].toBigInt();
  }

  get maxEndBlockNumber(): BigInt {
    return this[4].toBigInt();
  }

  get finalizationStatus(): i32 {
    return this[5].toI32();
  }

  get executionPayloadHash(): Bytes {
    return this[6].toBytes();
  }

  get activeVotingStrategies(): BigInt {
    return this[7].toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetQuerySchemaCall extends ethereum.Call {
  get inputs(): SetQuerySchemaCall__Inputs {
    return new SetQuerySchemaCall__Inputs(this);
  }

  get outputs(): SetQuerySchemaCall__Outputs {
    return new SetQuerySchemaCall__Outputs(this);
  }
}

export class SetQuerySchemaCall__Inputs {
  _call: SetQuerySchemaCall;

  constructor(call: SetQuerySchemaCall) {
    this._call = call;
  }

  get _querySchema(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetQuerySchemaCall__Outputs {
  _call: SetQuerySchemaCall;

  constructor(call: SetQuerySchemaCall) {
    this._call = call;
  }
}

export class SetQuorumCall extends ethereum.Call {
  get inputs(): SetQuorumCall__Inputs {
    return new SetQuorumCall__Inputs(this);
  }

  get outputs(): SetQuorumCall__Outputs {
    return new SetQuorumCall__Outputs(this);
  }
}

export class SetQuorumCall__Inputs {
  _call: SetQuorumCall;

  constructor(call: SetQuorumCall) {
    this._call = call;
  }

  get _quorum(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetQuorumCall__Outputs {
  _call: SetQuorumCall;

  constructor(call: SetQuorumCall) {
    this._call = call;
  }
}

export class SetUpCall extends ethereum.Call {
  get inputs(): SetUpCall__Inputs {
    return new SetUpCall__Inputs(this);
  }

  get outputs(): SetUpCall__Outputs {
    return new SetUpCall__Outputs(this);
  }
}

export class SetUpCall__Inputs {
  _call: SetUpCall;

  constructor(call: SetUpCall) {
    this._call = call;
  }

  get initializeParams(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetUpCall__Outputs {
  _call: SetUpCall;

  constructor(call: SetUpCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
