// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ProxyDeployed extends ethereum.Event {
  get params(): ProxyDeployed__Params {
    return new ProxyDeployed__Params(this);
  }
}

export class ProxyDeployed__Params {
  _event: ProxyDeployed;

  constructor(event: ProxyDeployed) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProxyFactory extends ethereum.SmartContract {
  static bind(address: Address): ProxyFactory {
    return new ProxyFactory("ProxyFactory", address);
  }

  predictProxyAddress(implementation: Address, salt: Bytes): Address {
    let result = super.call(
      "predictProxyAddress",
      "predictProxyAddress(address,bytes32):(address)",
      [
        ethereum.Value.fromAddress(implementation),
        ethereum.Value.fromFixedBytes(salt),
      ],
    );

    return result[0].toAddress();
  }

  try_predictProxyAddress(
    implementation: Address,
    salt: Bytes,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "predictProxyAddress",
      "predictProxyAddress(address,bytes32):(address)",
      [
        ethereum.Value.fromAddress(implementation),
        ethereum.Value.fromFixedBytes(salt),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class DeployProxyCall extends ethereum.Call {
  get inputs(): DeployProxyCall__Inputs {
    return new DeployProxyCall__Inputs(this);
  }

  get outputs(): DeployProxyCall__Outputs {
    return new DeployProxyCall__Outputs(this);
  }
}

export class DeployProxyCall__Inputs {
  _call: DeployProxyCall;

  constructor(call: DeployProxyCall) {
    this._call = call;
  }

  get implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get initializer(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get saltNonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DeployProxyCall__Outputs {
  _call: DeployProxyCall;

  constructor(call: DeployProxyCall) {
    this._call = call;
  }
}
